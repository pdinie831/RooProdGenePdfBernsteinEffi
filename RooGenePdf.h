/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOGENEPDF
#define ROOGENEPDF

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooListProxy.h"
#include "RooAbsPdf.h"
#include "RooAbsCategory.h"
#include "TMath.h"

 
class RooGenePdf : public RooAbsPdf {
public:
  RooGenePdf() {} ; 
  RooGenePdf(const char *name, const char *title,
	      RooAbsReal& x,
	      RooAbsReal& y,
	      RooAbsReal& z,
	      const RooArgList& coefList
	      );
  RooGenePdf(const RooGenePdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooGenePdf(*this,newname); }
  inline virtual ~RooGenePdf() { }
//   Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const;
//   Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const;
protected:

  RooRealProxy _x ;
  RooRealProxy _y ;
  RooRealProxy _z ;
  RooListProxy _coefList ;
  
  Double_t evaluate() const ;

private:
  ClassDef(RooGenePdf,1) // Your description goes here...
};
 
#endif
